site_name: "LangGraph"
site_description: Build reliable, stateful AI systems, without giving up control
site_url: https://langchain-ai.github.io/langgraph/
repo_url: https://github.com/langchain-ai/langgraph
edit_uri: edit/main/docs/docs/
theme:
  name: material
  custom_dir: overrides
  logo_dark_mode: static/wordmark_light.svg
  logo_light_mode: static/wordmark_dark.svg
  favicon: static/favicon.png
  icon:
    repo: fontawesome/brands/git-alt
  features:
    - announce.dismiss
    - content.code.annotate
    - content.code.copy
    - content.code.select
    - content.tabs.link
    - content.action.edit
    - content.tooltips
    - header.autohide
    - navigation.indexes
    - navigation.footer
    - navigation.instant
    - navigation.sections
    - navigation.instant.prefetch
    - navigation.instant.progress
    - navigation.path
    - navigation.tabs
    - navigation.tabs.sticky
    - navigation.top
    - navigation.prune
    - navigation.tracking
    - search.highlight
    - search.share
    - search.suggest
  palette:
    - scheme: default
      primary: white
      accent: gray
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
    - scheme: slate
      primary: grey
      accent: white
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
  font:
    text: "Public Sans"
    code: "Roboto Mono"
plugins:
  - search:
      separator: '[\s\u200b\-,:!=\[\]()"`/]+|\.(?!\d)|&[lg]t;'
  - autorefs
  - tags
  - mkdocstrings:
      custom_templates: templates
      handlers:
        python:
          import:
            - https://docs.python.org/3/objects.inv
            - https://python.langchain.com/api_reference/objects.inv
          options:
            preload_modules:
              - langchain
              - langchain_core
            enable_inventory: true
            members_order: source
            allow_inspection: true
            heading_level: 2
            show_bases: true
            show_source: false 
            summary: true
            inherited_members: true
            selection:
              docstring_style: google
            docstring_section_style: table
            show_root_toc_entry: false
            show_signature: true
            show_signature_annotations: true
            separate_signature: true
            line_length: 60
            show_symbol_type_heading: true
            show_symbol_type_toc: true
            signature_crossrefs: true
            options:
              filters:
                - "!^_"

nav:
  - Guides:
    - Home: index.md
    - Get started:
      - Quickstart: agents/agents.md
      - LangGraph basics:
        -  concepts/why-langgraph.md
        -  Build a basic chatbot: tutorials/get-started/1-build-basic-chatbot.md
        -  tutorials/get-started/2-add-tools.md
        -  tutorials/get-started/3-add-memory.md
        -  Add human-in-the-loop: tutorials/get-started/4-human-in-the-loop.md
        -  tutorials/get-started/5-customize-state.md
        -  tutorials/get-started/6-time-travel.md
      - Deployment:
        - tutorials/deployment.md
        - Local deploy: tutorials/langgraph-platform/local-server.md
        - Cloud deploy: cloud/quick_start.md
    - LangGraph:
      # agentic concepts may need a bit of love if we're putting it
      # at the top of the LangGraph section
      - concepts/agentic_concepts.md
      - Graph API:
        - Overview: concepts/low_level.md
          # low level concepts is an odd mix of a Graph API basics overview (conceptual)
          # and a general glossary of terms related to the Graph API
          # but it also has some terms from the functional API.
          # Unclear on where to put it in its current form.
        - Use the Graph API: how-tos/graph-api.ipynb
      - Persistence:
        - Overview: concepts/persistence.md
        - concepts/durable_execution.md # TO DO: Combine with Persistence concept doc?
        - how-tos/persistence.ipynb
      - Memory:
        - Overview: concepts/memory.md
        - Manage memory: how-tos/memory.ipynb
      - Human-in-the-loop:
        - Overview: concepts/human_in_the_loop.md
        - how-tos/human_in_the_loop/wait-user-input.ipynb
        - how-tos/human_in_the_loop/review-tool-calls.ipynb
      - Streaming:
        - Overview: concepts/streaming.md
        - how-tos/streaming.ipynb
        - how-tos/streaming-tokens.ipynb
        - how-tos/streaming-specific-nodes.ipynb
        - how-tos/streaming-events-from-within-tools.ipynb
        - how-tos/streaming-subgraphs.ipynb
        - how-tos/disable-streaming.ipynb
      - Controllability:
        - how-tos/map-reduce.ipynb
        - how-tos/command.ipynb
        - how-tos/configuration.ipynb
        - how-tos/node-retries.ipynb
        - how-tos/return-when-recursion-limit-hits.ipynb
      - Breakpoints:
        - Overview: concepts/breakpoints.md
        - how-tos/human_in_the_loop/breakpoints.ipynb
        - how-tos/human_in_the_loop/dynamic_breakpoints.ipynb
      - Time travel:
        - Overview: concepts/time-travel.md
        - how-tos/human_in_the_loop/time-travel.ipynb
        - how-tos/human_in_the_loop/edit-graph-state.ipynb
      - Tool calling:
        - how-tos/tool-calling.ipynb
        - how-tos/tool-calling-errors.ipynb
        - how-tos/pass-run-time-values-to-tools.ipynb
        - how-tos/update-state-from-tools.ipynb
        - how-tos/pass-config-to-tools.ipynb
        - how-tos/many-tools.ipynb
      - Subgraphs:
        - how-tos/subgraph.ipynb
        - how-tos/subgraphs-manage-state.ipynb
        - how-tos/subgraph-transform-state.ipynb
      - Multi-agent:
        - Overview: concepts/multi_agent.md
        - how-tos/agent-handoffs.ipynb
        - how-tos/multi-agent-network.ipynb
        - how-tos/multi-agent-multi-turn-convo.ipynb
      - Functional API:
        - Overview: concepts/functional_api.md
        - how-tos/wait-user-input-functional.ipynb
        - how-tos/review-tool-calls-functional.ipynb
        - how-tos/persistence-functional.ipynb
        - how-tos/cross-thread-persistence-functional.ipynb
        - how-tos/multi-agent-network-functional.ipynb
        - how-tos/multi-agent-multi-turn-convo-functional.ipynb
        - how-tos/autogen-integration-functional.ipynb
      - Other:
        # Pregel is the underlying low level API that backs
        # both the Graph API and the Functional API.
        # It allows using the functional API from within the Graph API
        # and vice versa.
        - concepts/pregel.md
        # We want to push async higher (need to check the content inside it)
        # and convert it into a concept rather than a how-to page.
        - how-tos/async.ipynb
        - how-tos/run-id-langsmith.ipynb
        - how-tos/autogen-integration.ipynb
    - Prebuilt agents:
        - Overview: agents/overview.md
        - agents/run_agents.md
        - agents/streaming.md
        - agents/models.md
        - agents/tools.md
        - agents/mcp.md
        - agents/context.md
        - agents/memory.md
        - agents/human-in-the-loop.md
        - agents/multi-agent.md
        - agents/evals.md
        - agents/deployment.md
        - agents/ui.md
    - LangGraph Platform:
      - Overview: concepts/langgraph_platform.md
      - concepts/platform_architecture.md
      - concepts/scalability_and_resilience.md
      - concepts/deployment_options.md
      - concepts/bring_your_own_cloud.md
      - concepts/plans.md
      - concepts/template_applications.md
      - Components:
        - concepts/langgraph_control_plane.md
        - concepts/langgraph_data_plane.md
        - concepts/langgraph_server.md
        - concepts/langgraph_studio.md
        - concepts/langgraph_cli.md
        - concepts/sdk.md
        - how-tos/use-remote-graph.md
      - LangGraph server:
        - concepts/application_structure.md
        - concepts/assistants.md
        - concepts/double_texting.md
        - concepts/auth.md
      - Deployment options:
        - concepts/langgraph_cloud.md
        - concepts/langgraph_self_hosted_data_plane.md
        - concepts/langgraph_self_hosted_control_plane.md
        - concepts/langgraph_standalone_container.md
        - concepts/self_hosted.md
      - Application structure:
        - cloud/deployment/setup.md
        - cloud/deployment/setup_pyproject.md
        - cloud/deployment/setup_javascript.md
        - cloud/deployment/semantic_search.md
        - cloud/deployment/custom_docker.md
        - cloud/deployment/test_locally.md
        - cloud/deployment/graph_rebuild.md
        - how-tos/autogen-langgraph-platform.ipynb
      - Deployment:
        - cloud/deployment/cloud.md
        - cloud/deployment/self_hosted_data_plane.md
        - cloud/deployment/self_hosted_control_plane.md
        - cloud/deployment/standalone_container.md
        - how-tos/deploy-self-hosted.md
        - how-tos/use-remote-graph.md
        - how-tos/ttl/configure_ttl.md
      - Data management:
        - how-tos/ttl/configure_ttl.md
      - Authentication & access control:
        - how-tos/auth/custom_auth.md
        - how-tos/auth/openapi_security.md
        - tutorials/auth/getting_started.md
        - tutorials/auth/resource_auth.md
        - tutorials/auth/add_auth_server.md
      - Assistants:
        - cloud/how-tos/configuration_cloud.md
        - cloud/how-tos/assistant_versioning.md
      - Threads:
        - cloud/how-tos/copy_threads.md
        - cloud/how-tos/check_thread_status.md
      - Runs:
        - cloud/how-tos/background_run.md
        - cloud/how-tos/same-thread.md
        - cloud/how-tos/cron_jobs.md
        - cloud/how-tos/stateless_runs.md
        - cloud/how-tos/configurable_headers.md
      - Streaming:
        - cloud/how-tos/stream_values.md
        - cloud/how-tos/stream_updates.md
        - cloud/how-tos/stream_messages.md
        - cloud/how-tos/stream_events.md
        - cloud/how-tos/stream_debug.md
        - cloud/how-tos/stream_multiple.md
        - cloud/how-tos/use_stream_react.md
        - cloud/how-tos/generative_ui_react.md
      - Human-in-the-loop:
        - cloud/how-tos/human_in_the_loop_breakpoint.md
        - cloud/how-tos/human_in_the_loop_user_input.md
        - cloud/how-tos/human_in_the_loop_edit_state.md
        - cloud/how-tos/human_in_the_loop_time_travel.md
        - cloud/how-tos/human_in_the_loop_review_tool_calls.md
      - Double-texting:
        - cloud/how-tos/interrupt_concurrent.md
        - cloud/how-tos/rollback_concurrent.md
        - cloud/how-tos/reject_concurrent.md
        - cloud/how-tos/enqueue_concurrent.md
      - Webhooks:
        - cloud/how-tos/webhooks.md
      - Cron Jobs:
        - cloud/how-tos/cron_jobs.md
      - Modifying the API:
        - how-tos/http/custom_lifespan.md
        - how-tos/http/custom_middleware.md
        - how-tos/http/custom_routes.md
      - LangGraph Studio:
        - cloud/how-tos/test_deployment.md
        - cloud/how-tos/test_local_deployment.md
        - cloud/how-tos/invoke_studio.md
        - cloud/how-tos/threads_studio.md
        - cloud/how-tos/datasets_studio.md
        - cloud/how-tos/iterate_graph_studio.md
        - cloud/how-tos/clone_traces_studio.md
        - how-tos/local-studio.md
  
  - Reference:
    - reference/index.md
    - LangGraph:
      - Graphs: reference/graphs.md
      - Checkpointing: reference/checkpoints.md
      - Storage: reference/store.md
      - Types: reference/types.md
      - Config: reference/config.md
      - Functional API: reference/func.md
      - Errors: reference/errors.md
      - Constants: reference/constants.md
      - Pregel: reference/pregel.md
      - Channels: reference/channels.md
    - Prebuilt:
      - Agents: reference/agents.md
      - Supervisor: reference/supervisor.md
      - Swarm: reference/swarm.md
      - MCP Adapters: reference/mcp.md
    - LangGraph Platform:
      - Server API: cloud/reference/api/api_ref.md
      - CLI: cloud/reference/cli.md
      - SDK (Python): cloud/reference/sdk/python_sdk_ref.md
      - SDK (JS/TS): cloud/reference/sdk/js_ts_sdk_ref.md
      - RemoteGraph: reference/remote_graph.md
      - Environment variables: cloud/reference/env_var.md

  - Examples:
    - tutorials/langgraph-platform/local-server.md
    - tutorials/workflows/index.md
    - tutorials/rag/langgraph_agentic_rag.ipynb
    - tutorials/multi_agent/agent_supervisor.ipynb
    - tutorials/customer-support/customer-support.ipynb
    - SQL agent: tutorials/sql-agent.ipynb

  - Resources:
    - LLMS-txt: llms-txt-overview.md
    - concepts/faq.md
    - agents/prebuilt.md # NOTE: prebuilt.md is auto-generated by `make build-prebuilt`
    - Template applications: concepts/template_applications.md  # TODO: make tutorial
    - Troubleshooting:
        - Errors:
          - troubleshooting/errors/index.md
          - troubleshooting/errors/GRAPH_RECURSION_LIMIT.md
          - troubleshooting/errors/INVALID_CONCURRENT_GRAPH_UPDATE.md
          - troubleshooting/errors/INVALID_GRAPH_NODE_RETURN_VALUE.md
          - troubleshooting/errors/MULTIPLE_SUBGRAPHS.md
          - troubleshooting/errors/INVALID_CHAT_HISTORY.md
          - troubleshooting/errors/INVALID_LICENSE.md
        - LangGraph Studio: troubleshooting/studio.md
    - Learn:
      - LangGraph Academy course: https://academy.langchain.com/courses/intro-to-langgraph
      - Case studies: adopters.md

markdown_extensions:
  - abbr
  - admonition
  - pymdownx.details
  - attr_list
  - def_list
  - footnotes
  - md_in_html
  - pymdownx.superfences
  - pymdownx.tabbed:
      alternate_style: true
  - toc:
      permalink: true
  - pymdownx.arithmatex:
      generic: true
  - pymdownx.betterem:
      smart_enable: all
  - pymdownx.caret
  - pymdownx.details
  - pymdownx.emoji:
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
      emoji_index: !!python/name:material.extensions.emoji.twemoji
  - pymdownx.highlight:
      anchor_linenums: true
      line_spans: __span
      use_pygments: true
      pygments_lang_class: true
  - pymdownx.inlinehilite
  - pymdownx.keys
  - pymdownx.magiclink:
      normalize_issue_symbols: true
      repo_url_shorthand: true
      user: langchain-ai
      repo: langgraph
  - pymdownx.mark
  - pymdownx.smartsymbols
  - pymdownx.snippets:
      auto_append:
        - includes/mkdocs.md
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.tabbed:
      alternate_style: true
      combine_header_slug: true
  - pymdownx.tasklist:
      custom_checkbox: true
  - markdown_include.include:
      base_path: ./
  - github-callouts
hooks:
  - _scripts/notebook_hooks.py
extra:
  consent:
    title: Cookie consent
    actions:
      - accept
      - reject
    description: >- 
      We use cookies to recognize your repeated visits and preferences, as well
      as to measure the effectiveness of our documentation and whether users
      find what they're searching for. <strong>Clicking "Accept" makes our
      documentation better. Thank you!</strong> ❤️
  social:
    - icon: fontawesome/brands/js
      link: https://langchain-ai.github.io/langgraphjs/
    - icon: fontawesome/brands/github
      link: https://github.com/langchain-ai/langgraph
    - icon: fontawesome/brands/twitter
      link: https://twitter.com/LangChainAI
  analytics:
    provider: google
    property: G-G8X6ELZYE0
    feedback:
      title: Was this page helpful?
      ratings:
        - icon: material/emoticon-happy-outline
          name: This page was helpful
          data: 1
          note: >-
            Thanks for your feedback!
        - icon: material/emoticon-sad-outline
          name: This page could be improved
          data: 0
          note: >-
            Thanks for your feedback! Please help us improve this page by adding to the discussion below.
  shared_analytics:
    provider: google
    property: G-47WX3HKKY2
validation:
  # https://www.mkdocs.org/user-guide/configuration/
  # We are still raising for omitted files because they determine the breadcrumbs for pages.
  omitted_files: info 
  absolute_links: warn
  unrecognized_links: warn
  # TODO: figure out how to enable 'warn' for this
  # it's only an issue for tutorials/storm/storm.ipynb
  # because it creates anchors in the generated report
  # and those anchors are not available in the actual doc
  anchors: info
  # this is needed to handle headers with anchors for nav
  not_found: info
copyright: >
  Copyright &copy; 2025 LangChain, Inc | <a href="#__consent">Consent Preferences</a>
extra_css:
  - stylesheets/version_admonitions.css
  - stylesheets/logos.css
