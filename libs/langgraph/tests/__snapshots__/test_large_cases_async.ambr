# serializer version: 1
# name: test_weather_subgraph[memory]
  '''
  %%{init: {'flowchart': {'curve': 'linear'}}}%%
  graph TD;
  	__start__([<p>__start__</p>]):::first
  	router_node(router_node)
  	normal_llm_node(normal_llm_node)
  	__end__([<p>__end__</p>]):::last
  	__start__ --> router_node;
  	normal_llm_node --> __end__;
  	weather_graph_weather_node --> __end__;
  	router_node -.-> normal_llm_node;
  	router_node -.-> weather_graph_model_node;
  	router_node -.-> __end__;
  	subgraph weather_graph
  	weather_graph_model_node(model_node)
  	weather_graph_weather_node(weather_node<hr/><small><em>__interrupt = before</em></small>)
  	weather_graph_model_node --> weather_graph_weather_node;
  	end
  	classDef default fill:#f2f0ff,line-height:1.2
  	classDef first fill-opacity:0
  	classDef last fill:#bfb6fc
  
  '''
# ---
# name: test_weather_subgraph[postgres_aio]
  '''
  %%{init: {'flowchart': {'curve': 'linear'}}}%%
  graph TD;
  	__start__([<p>__start__</p>]):::first
  	router_node(router_node)
  	normal_llm_node(normal_llm_node)
  	__end__([<p>__end__</p>]):::last
  	__start__ --> router_node;
  	normal_llm_node --> __end__;
  	weather_graph_weather_node --> __end__;
  	router_node -.-> normal_llm_node;
  	router_node -.-> weather_graph_model_node;
  	router_node -.-> __end__;
  	subgraph weather_graph
  	weather_graph_model_node(model_node)
  	weather_graph_weather_node(weather_node<hr/><small><em>__interrupt = before</em></small>)
  	weather_graph_model_node --> weather_graph_weather_node;
  	end
  	classDef default fill:#f2f0ff,line-height:1.2
  	classDef first fill-opacity:0
  	classDef last fill:#bfb6fc
  
  '''
# ---
# name: test_weather_subgraph[postgres_aio_pipe]
  '''
  %%{init: {'flowchart': {'curve': 'linear'}}}%%
  graph TD;
  	__start__([<p>__start__</p>]):::first
  	router_node(router_node)
  	normal_llm_node(normal_llm_node)
  	__end__([<p>__end__</p>]):::last
  	__start__ --> router_node;
  	normal_llm_node --> __end__;
  	weather_graph_weather_node --> __end__;
  	router_node -.-> normal_llm_node;
  	router_node -.-> weather_graph_model_node;
  	router_node -.-> __end__;
  	subgraph weather_graph
  	weather_graph_model_node(model_node)
  	weather_graph_weather_node(weather_node<hr/><small><em>__interrupt = before</em></small>)
  	weather_graph_model_node --> weather_graph_weather_node;
  	end
  	classDef default fill:#f2f0ff,line-height:1.2
  	classDef first fill-opacity:0
  	classDef last fill:#bfb6fc
  
  '''
# ---
# name: test_weather_subgraph[postgres_aio_pool]
  '''
  %%{init: {'flowchart': {'curve': 'linear'}}}%%
  graph TD;
  	__start__([<p>__start__</p>]):::first
  	router_node(router_node)
  	normal_llm_node(normal_llm_node)
  	__end__([<p>__end__</p>]):::last
  	__start__ --> router_node;
  	normal_llm_node --> __end__;
  	weather_graph_weather_node --> __end__;
  	router_node -.-> normal_llm_node;
  	router_node -.-> weather_graph_model_node;
  	router_node -.-> __end__;
  	subgraph weather_graph
  	weather_graph_model_node(model_node)
  	weather_graph_weather_node(weather_node<hr/><small><em>__interrupt = before</em></small>)
  	weather_graph_model_node --> weather_graph_weather_node;
  	end
  	classDef default fill:#f2f0ff,line-height:1.2
  	classDef first fill-opacity:0
  	classDef last fill:#bfb6fc
  
  '''
# ---
# name: test_weather_subgraph[postgres_aio_shallow]
  '''
  %%{init: {'flowchart': {'curve': 'linear'}}}%%
  graph TD;
  	__start__([<p>__start__</p>]):::first
  	router_node(router_node)
  	normal_llm_node(normal_llm_node)
  	__end__([<p>__end__</p>]):::last
  	__start__ --> router_node;
  	normal_llm_node --> __end__;
  	weather_graph_weather_node --> __end__;
  	router_node -.-> normal_llm_node;
  	router_node -.-> weather_graph_model_node;
  	router_node -.-> __end__;
  	subgraph weather_graph
  	weather_graph_model_node(model_node)
  	weather_graph_weather_node(weather_node<hr/><small><em>__interrupt = before</em></small>)
  	weather_graph_model_node --> weather_graph_weather_node;
  	end
  	classDef default fill:#f2f0ff,line-height:1.2
  	classDef first fill-opacity:0
  	classDef last fill:#bfb6fc
  
  '''
# ---
# name: test_weather_subgraph[sqlite_aio]
  '''
  %%{init: {'flowchart': {'curve': 'linear'}}}%%
  graph TD;
  	__start__([<p>__start__</p>]):::first
  	router_node(router_node)
  	normal_llm_node(normal_llm_node)
  	__end__([<p>__end__</p>]):::last
  	__start__ --> router_node;
  	normal_llm_node --> __end__;
  	weather_graph_weather_node --> __end__;
  	router_node -.-> normal_llm_node;
  	router_node -.-> weather_graph_model_node;
  	router_node -.-> __end__;
  	subgraph weather_graph
  	weather_graph_model_node(model_node)
  	weather_graph_weather_node(weather_node<hr/><small><em>__interrupt = before</em></small>)
  	weather_graph_model_node --> weather_graph_weather_node;
  	end
  	classDef default fill:#f2f0ff,line-height:1.2
  	classDef first fill-opacity:0
  	classDef last fill:#bfb6fc
  
  '''
# ---
